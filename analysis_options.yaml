# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  plugins:
    - dart
  code-style:
    format:
      line-length: 120

  exclude:
    - "**/*.g.dart"
    - lib/test/**
    - test/**.mocks.dart
    - "**/generated"
    - "**/*.chopper.dart"
    - "build/**"

  errors:
    lines_longer_than_80_chars: ignore
    always_use_package_imports: error
    avoid_empty_else: error
    avoid_print: warning
    avoid_returning_null_for_future: error
    avoid_types_as_parameter_names: error
    cancel_subscriptions: error
    prefer_single_quotes: error
    # avoid_types_on_closure_parameters: error
    # always_specify_types: error

    always_declare_return_types: error

#    directives_ordering: error

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # STYLE
    always_declare_return_types: true
    #    directives_ordering: true # do
    lines_longer_than_80_chars: true # avoid
    constant_identifier_names: false
    require_trailing_commas: true
    prefer_const_constructors: true
    annotate_overrides: true
    unnecessary_parenthesis: true
    use_key_in_widget_constructors: true

    # DOCUMENTATION
    package_api_docs: true # do
    public_member_api_docs: false # do

    # DESIGN
    use_to_and_as_if_applicable: true
    one_member_abstracts: true
    # avoid_classes_with_only_static_members: true
    prefer_mixin: true
    use_setters_to_change_properties: true
    avoid_setters_without_getters: true
    avoid_returning_null: true
    avoid_returning_this: true
    type_annotate_public_apis: true
    omit_local_variable_types: true
    # avoid_types_on_closure_parameters: true
    # always_specify_types: true
    avoid_private_typedef_functions: true
    avoid_positional_boolean_parameters: true
    avoid_equals_and_hash_code_on_mutable_classes: true

    # ERROR
    always_use_package_imports: false
    avoid_empty_else: true
    avoid_print: true # Uncomment to disable the `avoid_print` rule
    avoid_types_as_parameter_names: true
    prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    avoid_dynamic_calls: true
    avoid_returning_null_for_future: true
    avoid_slow_async_io: true
    cancel_subscriptions: true
    close_sinks: true
    # diagnostic_describe_all_properties: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_statements: true
    unsafe_html: true
    use_build_context_synchronously: true
    library_private_types_in_public_api: false

    # PUB
    depend_on_referenced_packages: true
    package_names: true

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

